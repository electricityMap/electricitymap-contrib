name: Python Formatting

on:
  workflow_call:

jobs:
  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install poetry
        run: |
          pipx install poetry
      - name: Get poetry version
        id: get-poetry-version
        run: |
          echo "$(poetry --version | awk '{print "poetry-version="$3}' | tr -d '()')" >> $GITHUB_OUTPUT
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version-file: '.python-version'
      - name: Restore cache
        id: cache
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-venv-poetry_${{steps.get-poetry-version.outputs.poetry-version}}-${{ hashFiles('poetry.lock') }}
          restore-keys: ${{ runner.os }}-venv-poetry_${{steps.get-poetry-version.outputs.poetry-version}}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          poetry install -E parsers --sync
      - name: Check formatting
        run: |
          poetry run ruff format . --check
      - name: Check linting
        run: |
          poetry run ruff check . --output-format=github
