name: CI
on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 7 * * 1'
  workflow_run:
    workflows: ['Deploy preview']
    branches-ignore:
      - master

jobs:
  # This job is used to determine what files have changed and is used by later jobs to determine if they should run.
  setup:
    name: Setup
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      frontend: ${{ steps.check-changed-files.outputs.frontend_any_changed }}
      config: ${{ steps.check-changed-files.outputs.config_any_changed }}
      markdown: ${{ steps.check-changed-files.outputs.markdown_any_changed }}
      json: ${{ steps.check-changed-files.outputs.json_any_changed }}
      python: ${{ steps.check-changed-files.outputs.python_any_changed }}
      workflows: ${{ steps.check-changed-files.outputs.workflows_any_changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check which files have changed
        id: check-changed-files
        uses: tj-actions/changed-files@v42.0.2
        with:
          files_yaml_from_source_file: .github/filter-groups.yml
      - name: Log outputs
        run: |
          echo "frontend changed: ${{ steps.check-changed-files.outputs.frontend_any_changed }}
          echo "config changed: ${{ steps.check-changed-files.outputs.config_any_changed }}
          echo "markdown changed: ${{ steps.check-changed-files.outputs.markdown_any_changed }}
          echo "json changed: ${{ steps.check-changed-files.outputs.json_any_changed }}
          echo "python changed: ${{ steps.check-changed-files.outputs.python_any_changed }}
          echo "workflows changed: ${{ steps.check-changed-files.outputs.workflows_any_changed }}

  #                        #
  # Repository wide checks #
  #                        #
  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: './web/.node-version'
      - name: Restore node_modules for web
        id: cache-web
        uses: actions/cache@v4
        with:
          path: web/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('./web/pnpm-lock.yaml') }}
      - name: Install web dependencies
        if: steps.cache-web.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile
        working-directory: ./web
      - name: Prettier Check
        # Uses the prettier binary from the web node_modules so it's always in sync.
        run: |
          web/node_modules/.bin/prettier --check .


  earthly:
    name: earthly
    needs: [prettier]
    uses: ./.github/workflows/earthly-contrib.yml
    secrets: inherit

  validate_local_links:
    name: Validate
    needs: [setup]
    if: >-
      needs.setup.outputs.markdown != 'false' ||
      needs.setup.outputs.workflows != 'false'
    uses: ./.github/workflows/validate_local_links_in_md.yml

  jsonlint:
    name: JSONLint
    needs: [setup, prettier]
    if: >-
      needs.setup.outputs.json != 'false' ||
      needs.setup.outputs.workflows != 'false'
    uses: ./.github/workflows/jsonlint.yml

  #                 #
  # Frontend checks #
  #                 #
  unit_test:
    name: Unit test
    needs: [setup]
    if: >-
      needs.setup.outputs.frontend != 'false' ||
      needs.setup.outputs.workflows != 'false'
    uses: ./.github/workflows/unit_test.yml

  eslint:
    name: ESLint
    needs: [setup, prettier]
    if: >-
      needs.setup.outputs.frontend != 'false' ||
      needs.setup.outputs.workflows != 'false'
    uses: ./.github/workflows/eslint.yml

  typecheck:
    name: Typecheck
    needs: [setup, prettier]
    if: >-
      needs.setup.outputs.frontend != 'false' ||
      needs.setup.outputs.workflows != 'false'
    uses: ./.github/workflows/typecheck.yml

  deploy_preview_branch:
    name: Deploy preview
    needs: [eslint, typecheck, setup, validate_generate_files, unit_test]
    if: >-
      (needs.setup.outputs.frontend != 'false' ||
      needs.setup.outputs.workflows != 'false') &&
      github.event.pull_request.head.repo.full_name == github.repository &&
      github.ref_name != 'master'
    uses: ./.github/workflows/deploy_preview_branch.yml
    secrets: inherit

  cypress:
    name: Cypress
    needs: [eslint, typecheck, validate_generate_files, unit_test]
    uses: ./.github/workflows/cypress.yml

  # Python checks
  python_formatting:
    name: Python
    needs: [setup]
    if: >-
      needs.setup.outputs.python != 'false' ||
      needs.setup.outputs.workflows != 'false'
    uses: ./.github/workflows/python_formatting.yml

  python_tests:
    name: Python
    needs: [setup]
    if: >-
      needs.setup.outputs.python != 'false' ||
      needs.setup.outputs.config != 'false' ||
      needs.setup.outputs.workflows != 'false'
    uses: ./.github/workflows/python_tests.yml

  # Config checks
  validate_config_filenames:
    name: Validate
    needs: [setup]
    if: >-
      needs.setup.outputs.config != 'false' ||
      needs.setup.outputs.workflows != 'false'
    uses: ./.github/workflows/validate_filenames.yml

  validate_generate_files:
    name: Validate
    needs: [setup]
    if: >-
      needs.setup.outputs.frontend != 'false' ||
      needs.setup.outputs.config != 'false' ||
      needs.setup.outputs.workflows != 'false'
    uses: ./.github/workflows/validate_generate_files.yml

  # Code quality checks
  codeql:
    needs: [setup, prettier]
    name: CodeQL
    uses: ./.github/workflows/codeql.yml
